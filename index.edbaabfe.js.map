{"mappings":"A,S,E,C,C,C,E,C,A,M,G,E,E,M,A,G,C,E,E,M,A,E,I,I,E,E,E,A,M,G,E,E,I,C,C,E,C,C,C,E,C,O,C,CCGA,SAAS,EAAa,CAAS,CAAE,CAAW,EAC1C,IAAM,EAAS,SAAS,aAAa,CAAC,OAEtC,EAAU,OAAO,CAAC,SAAC,CAAnB,EAA0B,OAAA,EAAO,SAAS,CAAC,GAAG,CAAC,E,GAC/C,EAAO,WAAW,CAAG,EACrB,SAAS,IAAI,CAAC,WAAW,CAAC,EAC5B,CAgBA,AALS,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA7B,EACE,WAAW,WAAM,OAAA,EAAO,AAAI,MAAM,yBAA2B,EAAA,IAC/D,GAGS,KAAK,CAAC,SAAC,CAAlB,EAA2B,OAAA,EAAa,CAAC,UAAW,gBAAgB,CAAE,E,GAEtE,AAfS,IAAI,QAAQ,SAAC,CAAA,CAAS,CAA7B,EACE,SAAS,aAAa,CAAC,SAAS,gBAAgB,CAAC,QAAS,WACxD,EAAQ,wBACV,EACF,GAWS,IAAI,CAAC,SAAC,CAAjB,M,CAOO,CAJe,A,C,A,C,S,C,E,G,M,O,C,G,O,E,E,C,E,EAFJ,SAAS,IAAI,CAAC,gBAAgB,CAAC,c,A,S,C,E,G,A,a,O,Q,A,M,C,C,O,Q,C,E,A,M,C,C,a,C,O,M,I,C,E,E,I,A,S,C,C,C,E,G,G,G,A,U,O,E,O,E,E,K,G,I,E,O,S,C,Q,C,I,C,G,K,C,E,I,G,W,G,E,W,E,C,E,E,W,C,I,A,E,A,Q,G,A,Q,E,O,M,I,C,G,G,A,c,G,2C,I,C,G,O,E,E,K,G,E,I,A,W,M,A,U,wI,G,EAEd,MAAM,CAAC,SAAC,CAAzC,EACE,MAAO,AAAkB,YAAlB,EAAI,SAAS,AACtB,GAEiB,MAAM,EACrB,EAAa,CAAC,UAAU,CAAE,EAE9B","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _array_like_to_array(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n    for(var i = 0, arr2 = new Array(len); i < len; i++)arr2[i] = arr[i];\n    return arr2;\n}\nfunction _array_without_holes(arr) {\n    if (Array.isArray(arr)) return _array_like_to_array(arr);\n}\nfunction _iterable_to_array(iter) {\n    if (typeof Symbol !== \"undefined\" && iter[Symbol.iterator] != null || iter[\"@@iterator\"] != null) return Array.from(iter);\n}\nfunction _non_iterable_spread() {\n    throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\nfunction _to_consumable_array(arr) {\n    return _array_without_holes(arr) || _iterable_to_array(arr) || _unsupported_iterable_to_array(arr) || _non_iterable_spread();\n}\nfunction _unsupported_iterable_to_array(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _array_like_to_array(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(n);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _array_like_to_array(o, minLen);\n}\n// write your code here\nfunction createNewDiv(classList, textContent) {\n    var newDiv = document.createElement(\"div\");\n    classList.forEach(function(cl) {\n        return newDiv.classList.add(cl);\n    });\n    newDiv.textContent = textContent;\n    document.body.appendChild(newDiv);\n}\nvar promise1 = function() {\n    return new Promise(function(resolve, reject) {\n        document.querySelector(\".logo\").addEventListener(\"click\", function() {\n            resolve(\"Promise was resolved!\");\n        });\n    });\n};\nvar promise2 = function() {\n    return new Promise(function(resolve, reject) {\n        setTimeout(function() {\n            return reject(new Error(\"Promise was rejected!\"));\n        }, 3000);\n    });\n};\npromise2().catch(function(mess) {\n    return createNewDiv([\n        \"message\",\n        \"error-message\"\n    ], mess);\n});\npromise1().then(function(mess) {\n    var divList = document.body.querySelectorAll(\".message\");\n    var existingDiv = _to_consumable_array(divList).filter(function(div) {\n        return div.className === \"message\";\n    });\n    if (!existingDiv.length) createNewDiv([\n        \"message\"\n    ], mess);\n});\n\n//# sourceMappingURL=index.edbaabfe.js.map\n","'use strict';\n\n// write your code here\nfunction createNewDiv(classList, textContent) {\n  const newDiv = document.createElement('div');\n\n  classList.forEach((cl) => newDiv.classList.add(cl));\n  newDiv.textContent = textContent;\n  document.body.appendChild(newDiv);\n}\n\nconst promise1 = () => {\n  return new Promise((resolve, reject) => {\n    document.querySelector('.logo').addEventListener('click', () => {\n      resolve('Promise was resolved!');\n    });\n  });\n};\n\nconst promise2 = () => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => reject(new Error('Promise was rejected!')), 3000);\n  });\n};\n\npromise2().catch((mess) => createNewDiv(['message', 'error-message'], mess));\n\npromise1().then((mess) => {\n  const divList = document.body.querySelectorAll('.message');\n\n  const existingDiv = [...divList].filter((div) => {\n    return div.className === 'message';\n  });\n\n  if (!existingDiv.length) {\n    createNewDiv(['message'], mess);\n  }\n});\n"],"names":["_array_like_to_array","arr","len","length","i","arr2","Array","createNewDiv","classList","textContent","newDiv","document","createElement","forEach","cl","add","body","appendChild","promise2","Promise","resolve","reject","setTimeout","Error","catch","mess","promise1","querySelector","addEventListener","then","existingDiv","_to_consumable_array","_array_without_holes","isArray","querySelectorAll","_iterable_to_array","iter","Symbol","iterator","from","_unsupported_iterable_to_array","o","minLen","n","Object","prototype","toString","call","slice","constructor","name","test","_non_iterable_spread","TypeError","filter","div","className"],"version":3,"file":"index.edbaabfe.js.map"}